generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int         @id @default(autoincrement())
  profile      String
  password     String
  username     String
  name         String
  community    String
  phone        String
  email        String
  status       Boolean
  created_at   DateTime    @default(now())
  updated_at   DateTime    @default(now()) @updatedAt
  Tithe        Tithe[]
  Tithers      Tithers[]
  Offertory    Offertory[]
  Informations Informations[]
  Theme        Theme[]
}

model Tithers {
  id         Int      @id @default(autoincrement())
  fullName   String
  community  String
  address    String
  number     Int
  district   String
  city       String
  zip        Int      @default(32450000)
  phone      String?
  email      String?
  cpf        String?  @unique
  birthday   DateTime
  gender     String?
  user_id    Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  Tithe      Tithe[]
  user       User     @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "Tithers_user_id_fkey")
}

model Tithe {
  id         Int      @id @default(autoincrement())
  tither_id  Int
  date       DateTime
  value      Float
  community  String
  user_id    Int
  bank_id    Int      @default(0)
  mode_pay   String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  tither     Tithers  @relation(fields: [tither_id], references: [id])
  user       User     @relation(fields: [user_id], references: [id])
  bank       Bank     @relation(fields: [bank_id], references: [id])

  @@index([tither_id], map: "Tithe_tither_id_fkey")
  @@index([user_id], map: "Tithe_user_id_fkey")
  @@index([bank_id], map: "Tithe_bank_id_fkey")
}

model Offertory {
  id         Int      @id @default(autoincrement())
  date       DateTime 
  value      Float
  user_id    Int
  community  String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  user       User     @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "Offertory_user_id_fkey")
}

model Community {
  id     Int     @id @default(autoincrement())
  name   String
  status Boolean @default(false)
}

model Bank {
  id                 Int     @id @default(autoincrement())
  code               Int
  bank_name          String
  owner_account_name String
  agency             String
  account            String
  pix_key            String
  status             Boolean @default(true)
  Tithe              Tithe[]
}

model Informations {
  id          Int      @id @default(autoincrement())
  abrangence  String
  message     String   @db.Text
  image       String
  user_id     Int
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now()) @updatedAt
  user        User?    @relation(fields: [user_id], references: [id])
}

model Theme {
  id                Int      @id @default(autoincrement())
  primary           String
  secundary         String
  siderBg           String
  subMenuItemBg     String
  darkItemBg        String
  darkSubMenuItemBg String
  user_id           Int
  created_at        DateTime @default(now())
  updated_at        DateTime @default(now()) @updatedAt
  user              User?    @relation(fields: [user_id], references: [id])
}